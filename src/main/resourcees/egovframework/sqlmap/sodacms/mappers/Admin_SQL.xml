<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.cms.admin.service.impl.AdminMapper">

	<!-- 회원리스트  -->
	<select id="selectMemberList" parameterType="hashMap" resultType="hashMap">
		SELECT	aa.user_id, 
				aa.password,
				aa.pwcount, 
				aa.email, 
				aa.tel, 
				aa.dept, 
				aa.enabled, 
				aa.name,
				bb.authorities,
				cc.auth_nm,
				row_number() over(order by aa.user_id asc) rn
		FROM tb_user aa
		LEFT OUTER JOIN tb_user_auth bb ON bb.user_id = aa.user_id
		LEFT OUTER JOIN tb_auth cc ON bb.authorities = cc.authorities
		WHERE 1=1
		<if test="searchkeyword != null and searchkeyword != ''">
			<choose>
				<when test='searchtype == "1"'>
					AND aa.user_id LIKE '%'|| #{searchkeyword} ||'%'
			    </when>
			    <when test='searchtype == "2"'>
					AND aa.name LIKE '%'|| #{searchkeyword} ||'%'
			    </when>
			    <when test='searchtype == "3"'>
					AND aa.dept LIKE '%'|| #{searchkeyword} ||'%'
			    </when>
			    									    									    
			    <when test='searchtype == ""'>
					AND (
						aa.user_id LIKE '%'|| #{searchkeyword} ||'%'												
						or aa.name LIKE '%'|| #{searchkeyword} ||'%'
					)
				</when>
			</choose>
		</if>
		ORDER BY aa.user_id ASC
	</select>
	
	<select id="selectMemberListCount" parameterType="hashMap" resultType="int">

			SELECT COUNT(*) totcnt
			FROM tb_user
			where 1=1
			<if test="searchkeyword != null and searchkeyword != ''">
				<choose>
					<when test='searchtype == "1"'>
						AND user_id LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    <when test='searchtype == "2"'>
						AND name LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    									    									    
				    <when test='searchtype == ""'>
						AND (
							user_id LIKE '%'|| #{searchkeyword} ||'%'												
							or name LIKE '%'|| #{searchkeyword} ||'%'
						)
					</when>
				</choose>
			</if>	
	</select>	
	
	<!-- 회원가입 ID 중복 체크  -->
	<select id="memberIdCheck" parameterType="hashMap" resultType="int">
		SELECT 
			count(user_id)  
		FROM tb_user			
		WHERE user_id = #{userId} 
	</select>	
	
	<!-- 회원삭제 -->
	<delete id="deleteUser" parameterType="String">
	
		DELETE FROM tb_user
		WHERE user_id = #{userId}
	
	</delete>
	<delete id="deleteUserAuth" parameterType="String">
	
		DELETE FROM tb_user_auth
		WHERE user_id = #{userId}
	
	</delete>
	
	<!-- 공지사항리스트  -->
	<select id="selectNoticeList" parameterType="hashMap" resultType="hashMap">
		select 
			notice_no
			,title
			,content
			,writer
			,wri_date
			,file_no
			,remove_stat
		from tb_notice
		where 1=1
			and remove_stat = 'N'
			<if test="searchkeyword != null and searchkeyword != ''">
				<choose>
					<when test='searchtype == "1"'>
						AND writer LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    <when test='searchtype == "2"'>
						AND title LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    									    									    
				    <when test='searchtype == ""'>
						AND (
							writer LIKE '%'|| #{searchkeyword} ||'%'												
							or title LIKE '%'|| #{searchkeyword} ||'%'
						)
					</when>
				</choose>
			</if>	
		LIMIT 10 OFFSET #{startNo}
	</select>
	
	<select id="selectNoticeListCount" parameterType="hashMap" resultType="int">

			SELECT COUNT(*) totcnt
			FROM tb_notice
			WHERE 1=1
				and remove_stat = 'N'
				<if test="searchkeyword != null and searchkeyword != ''">
					<choose>
						<when test='searchtype == "1"'>
							AND writer LIKE '%'|| #{searchkeyword} ||'%'
					    </when>
					    <when test='searchtype == "2"'>
							AND title LIKE '%'|| #{searchkeyword} ||'%'
					    </when>
					    									    									    
					    <when test='searchtype == ""'>
							AND (
								writer LIKE '%'|| #{searchkeyword} ||'%'												
								or title LIKE '%'|| #{searchkeyword} ||'%'
							)
						</when>
					</choose>
				</if>	
	</select>	
	
	<!-- 공지사항 조회  -->
	<select id="selectNotice" parameterType="hashMap" resultType="hashMap">
		select 
			aa.notice_no
			,aa.title
			,aa.content
			,aa.writer
			,aa.wri_date
			,aa.file_no
			,aa.remove_stat
			,file.file_org_nm
		from tb_notice aa
			LEFT OUTER JOIN tb_file_info file ON file.FILE_NO = aa.FILE_NO
		where 1=1
			and notice_no = #{noticeNo}
	</select>
	
	<!-- 공지사항등록 -->
	<insert id="insertNotice" parameterType="hashMap">
	
		INSERT INTO tb_notice(
            			notice_no, 
            			title,
            			content, 
            			writer,
            			wri_date,
            			file_no)
	    VALUES (nextval('notice_no_seq'), 
	    		#{title},
	    		#{content},
	    		#{writer},
	    		to_char(now(), 'YYYYMMDD'), 
	    		#{fileNo})
	
	</insert>
	
	<!-- 공지사항수정 -->
	<update id="updateNotice" parameterType="hashMap">
	
		UPDATE tb_notice
		   SET  
		   		title = #{title} 
		   		,content = #{content}
		   		,writer = #{writer} 
		       	,wri_date = to_char(now(), 'YYYYMMDD')
		       	,file_no = #{fileNo}
		WHERE notice_no = #{noticeNo}
	
	</update>
	
	<!--공지사항삭제  -->
	<update id="deleteNotice" parameterType="long">
	
		UPDATE tb_notice 
		SET 	remove_stat = 'Y'
		WHERE notice_no = #{noticeNo}
		
	</update>
	
	<!-- 업로드파일 일괄삭제 Null처리 -->
	<update id="deleteNoticeFile" parameterType="long" flushCache="true">
	
		UPDATE tb_notice 
		SET 	file_no = NULL
	 	WHERE notice_no = #{noticeNo}
	 	
	</update>
	
	<!-- 권한리스트  -->
	<select id="selectAuthList" parameterType="hashMap" resultType="hashMap">
		
		SELECT 
			authorities,
			auth_nm,
			rem
		FROM tb_auth
		WHERE 1=1
			<if test="auth != null and auth != ''">
				AND authorities = #{auth}
			</if>
		ORDER BY auth_nm ASC
		
	</select>
	
	<!-- 권한리스트 등록 -->
	<insert id="insertAuth" parameterType="hashMap">
	
		INSERT INTO tb_auth(
            			authorities,
            			auth_nm, 
            			rem)
	    VALUES (
	    		#{authorities},
	    		#{authNm},
	    		#{rem})
	
	</insert>	
	
	<!-- 권한리스트 수정 -->
	<update id="updateAuth" parameterType="hashMap">

	UPDATE tb_auth
	   SET  
	   		auth_nm = #{authNm}
	       	,rem = #{rem}
	WHERE authorities = #{authorities}
	
	</update>
	
	<!--권한리스트 삭제  -->
	<delete id="deleteAuth" parameterType="hashMap" flushCache="true">
		delete 
		from tb_auth
		where 
			authorities = #{authorities}
	</delete>
	
	<!-- 권한별메뉴리스트 -->
	<select id="selectAuthMenuList" parameterType="hashMap" resultType="hashMap">
		
		SELECT 	aa.menu_code as all_menu_code 
			   , aa.menu_nm 
			   , bb.menu_code 
			   , bb.authorities
			   , bb.reg_date
		FROM TB_CMMN_MENU aa 
		LEFT OUTER JOIN (select menu_code, authorities, reg_date from TB_CMMN_MENU_GROUP where authorities = #{auth}) bb 	ON aa.menu_code = bb.menu_code
		<!-- where aa.menu_code not like ('999%') -->
		ORDER BY all_menu_code ASC
		
	</select>
	
	<!-- 메뉴단건등록 -->
	<insert id="menuInsertProc" parameterType="hashMap" flushCache="true" >
		
		INSERT INTO TB_CMMN_MENU_GROUP(
		        authorities, 
		        menu_code,
		        reg_date
		)VALUES(
				#{auth}, 
		        #{menuCode},
		        #{regDate}
		)
		
	</insert>
	
	<!-- 메뉴단건삭제 -->
	<delete id="menuDeleteProc" parameterType="hashMap" flushCache="true">
		
		DELETE FROM TB_CMMN_MENU_GROUP
		WHERE 
			menu_code = #{menuCode}
			AND authorities = #{auth}
			
	</delete>
	
	<!-- 메뉴리스트 조회 -->
	<select id="selectMenuGroupList"  parameterType="hashMap" resultType="hashMap">
		
		SELECT menu_code
				, menu_nm
				, menu_url
				, upper_menu_code
				
		FROM TB_CMMN_MENU  
		WHERE menu_code like #{frontMenuCode}||'%'
		
	</select>
	
	<!-- 메뉴일괄삭제 -->
	<delete id="menuAllDeleteProc" parameterType="hashMap" flushCache="true">
	
		DELETE FROM TB_CMMN_MENU_GROUP
		WHERE authorities = #{auth}
		AND   menu_code LIKE #{frontMenuCode}||'%'
		
	</delete>
	
	<!-- 자료실 리스트  -->
	<select id="selectRecsroomList" parameterType="hashMap" resultType="hashMap">
		select 
			recsroom_no
			,title
			,content
			,writer
			,wri_date
			,file_no
			,remove_stat
		from tb_recsroom
		where 1=1
			and remove_stat = 'N'
			<if test="searchkeyword != null and searchkeyword != ''">
				<choose>
					<when test='searchtype == "1"'>
						AND writer LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    <when test='searchtype == "2"'>
						AND title LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    									    									    
				    <when test='searchtype == ""'>
						AND (
							writer LIKE '%'|| #{searchkeyword} ||'%'												
							or title LIKE '%'|| #{searchkeyword} ||'%'
						)
					</when>
				</choose>
			</if>	
		LIMIT 10 OFFSET #{startNo}
	</select>
	
	<select id="selectRecsroomListCount" parameterType="hashMap" resultType="int">

			SELECT COUNT(*) totcnt
			FROM tb_recsroom
			WHERE 1=1
				and remove_stat = 'N'
				<if test="searchkeyword != null and searchkeyword != ''">
					<choose>
						<when test='searchtype == "1"'>
							AND writer LIKE '%'|| #{searchkeyword} ||'%'
					    </when>
					    <when test='searchtype == "2"'>
							AND title LIKE '%'|| #{searchkeyword} ||'%'
					    </when>
					    									    									    
					    <when test='searchtype == ""'>
							AND (
								writer LIKE '%'|| #{searchkeyword} ||'%'												
								or title LIKE '%'|| #{searchkeyword} ||'%'
							)
						</when>
					</choose>
				</if>	
				LIMIT 10 OFFSET #{startNo}
	</select>	
	
	<!-- 자료실 조회  -->
	<select id="selectRecsroom" parameterType="hashMap" resultType="hashMap">
		select 
			aa.recsroom_no
			,aa.title
			,aa.content
			,aa.writer
			,aa.wri_date
			,aa.file_no
			,aa.remove_stat
			,file.file_org_nm
		from tb_recsroom aa
			LEFT OUTER JOIN tb_file_info file ON file.FILE_NO = aa.FILE_NO
		where 1=1
			and recsroom_no = #{recsroomNo}
	</select>
	
	<!-- 자료실등록 -->
	<insert id="insertRecsroom" parameterType="hashMap">
	
		INSERT INTO tb_recsroom(
            			recsroom_no, 
            			title,
            			content, 
            			writer,
            			wri_date,
            			file_no)
	    VALUES (nextval('recsroom_no_seq'), 
	    		#{title},
	    		#{content},
	    		#{writer},
	    		to_char(now(), 'YYYYMMDD'), 
	    		#{fileNo})
	
	</insert>
	
	<!-- 자료실수정 -->
	<update id="updateRecsroom" parameterType="hashMap">
	
		UPDATE tb_recsroom
		   SET  
		   		title = #{title} 
		   		,content = #{content}
		   		,writer = #{writer} 
		       	,wri_date = to_char(now(), 'YYYYMMDD')
		       	,file_no = #{fileNo}
		WHERE recsroom_no = #{recsroomNo}
	
	</update>
	
	<!--자료실삭제  -->
	<update id="deleteRecsroom" parameterType="long">
	
		UPDATE tb_recsroom 
		SET 	remove_stat = 'Y'
		WHERE recsroom_no = #{recsroomNo}
		
	</update>
	
	<!-- 업로드파일 일괄삭제 Null처리 -->
	<update id="deleteRecsroomFile" parameterType="long" flushCache="true">
	
		UPDATE tb_recsroom 
		SET 	file_no = NULL
	 	WHERE recsroom_no = #{recsroomNo}
	 	
	</update>	
	
	<!-- 요청게시판 리스트  -->
	<select id="selectReqList" parameterType="hashMap" resultType="hashMap">
		select 
			req_no
			,title
			,content
			,writer
			,wri_date
			,file_no
			,remove_stat
		from tb_reqboard
		where 1=1
			and remove_stat = 'N'
			<if test="searchkeyword != null and searchkeyword != ''">
				<choose>
					<when test='searchtype == "1"'>
						AND writer LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    <when test='searchtype == "2"'>
						AND title LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    									    									    
				    <when test='searchtype == ""'>
						AND (
							writer LIKE '%'|| #{searchkeyword} ||'%'												
							or title LIKE '%'|| #{searchkeyword} ||'%'
						)
					</when>
				</choose>
			</if>	
		LIMIT 10 OFFSET #{startNo}
	</select>
	
	<select id="selectReqListCount" parameterType="hashMap" resultType="int">

			SELECT COUNT(*) totcnt
			FROM tb_reqboard
			WHERE 1=1
				and remove_stat = 'N'
				<if test="searchkeyword != null and searchkeyword != ''">
					<choose>
						<when test='searchtype == "1"'>
							AND writer LIKE '%'|| #{searchkeyword} ||'%'
					    </when>
					    <when test='searchtype == "2"'>
							AND title LIKE '%'|| #{searchkeyword} ||'%'
					    </when>
					    									    									    
					    <when test='searchtype == ""'>
							AND (
								writer LIKE '%'|| #{searchkeyword} ||'%'												
								or title LIKE '%'|| #{searchkeyword} ||'%'
							)
						</when>
					</choose>
				</if>	
				LIMIT 10 OFFSET #{startNo}
	</select>	
	
	<!-- 요청게시판 조회  -->
	<select id="selectReq" parameterType="hashMap" resultType="hashMap">
		select 
			aa.req_no
			,aa.title
			,aa.content
			,aa.writer
			,aa.wri_date
			,aa.file_no
			,aa.remove_stat
			,file.file_org_nm
		from tb_reqboard aa
			LEFT OUTER JOIN tb_file_info file ON file.FILE_NO = aa.FILE_NO
		where 1=1
			and req_no = #{reqNo}
	</select>
	
	<!-- 요청게시판 등록 -->
	<insert id="insertReq" parameterType="hashMap">
	
		INSERT INTO tb_reqboard(
            			req_no, 
            			title,
            			content, 
            			writer,
            			wri_date,
            			file_no)
	    VALUES (nextval('req_no_seq'), 
	    		#{title},
	    		#{content},
	    		#{writer},
	    		to_char(now(), 'YYYYMMDD'), 
	    		#{fileNo})
	
	</insert>
	
	<!-- 요청게시판 수정 -->
	<update id="updateReq" parameterType="hashMap">
	
		UPDATE tb_reqboard
		   SET  
		   		title = #{title} 
		   		,content = #{content}
		   		,writer = #{writer} 
		       	,wri_date = to_char(now(), 'YYYYMMDD')
		       	,file_no = #{fileNo}
		WHERE req_no = #{reqNo}
	
	</update>
	
	<!--요청게시판 삭제  -->
	<update id="deleteReq" parameterType="long">
	
		UPDATE tb_reqboard 
		SET 	remove_stat = 'Y'
		WHERE req_no = #{reqNo}
		
	</update>
	
	<!-- 업로드파일 일괄삭제 Null처리 -->
	<update id="deleteReqFile" parameterType="long" flushCache="true">
	
		UPDATE tb_reqboard 
		SET 	file_no = NULL
	 	WHERE req_no = #{reqNo}
	 	
	</update>	
	
	<!-- 메뉴리스트 -->
	<select id="selectMenuList" parameterType="hashMap" resultType="hashMap">
		
		SELECT 	
				menu_code 
			   , menu_nm 
			   , menu_url
			   , upper_menu_code
			   , upper_menu_code2
		FROM TB_CMMN_MENU  
		ORDER BY menu_code ASC
		
	</select>
	
	<!-- 메뉴리스트 등록 -->
	<insert id="insertMenu" parameterType="hashMap">
	
		INSERT INTO tb_cmmn_menu(
            			menu_code,
            			menu_nm, 
            			menu_url,
            			upper_menu_code,
            			upper_menu_code2)
	    VALUES (#{menuCode},
	    		#{menuNm},
	    		#{menuUrl},
	    		#{upperMenuCode},
	    		#{upperMenuCode2})
	
	</insert>
	
	<!-- 메뉴리스트 수정 -->
	<update id="updateMenu" parameterType="hashMap">
	
		UPDATE tb_cmmn_menu
		   SET  
		   		menu_code = #{menuCode} 
		   		,menu_nm = #{menuNm}
		   		,menu_url = #{menuUrl} 
		       	,upper_menu_code = #{upperMenuCode}
		       	,upper_menu_code2 = #{upperMenuCode2}
		       	
		WHERE menu_code = #{menuCode2}
	
	</update>
	
	<!-- 메뉴(그룹) 수정 -->
	<update id="updateMenu2" parameterType="hashMap">
	
		UPDATE tb_cmmn_menu_group
		   SET  
		   		menu_code = #{menuCode} 
		       	
		WHERE menu_code = #{menuCode2}
	
	</update>
	
	<!--메뉴리스트 삭제  -->
	<delete id="deleteMenu" parameterType="hashMap" flushCache="true">
		delete 
		from tb_cmmn_menu
		where 
			menu_code = #{menuCode}
	</delete>
	
	<!--메뉴(그룹) 삭제  -->
	<delete id="deleteMenu2" parameterType="hashMap" flushCache="true">
		delete 
		from tb_cmmn_menu_group
		where 
			menu_code = #{menuCode}
	</delete>
	
	<!-- 접속로그현황 리스트  -->
	<select id="selectLogSttusList" parameterType="hashMap" resultType="hashMap">
		select 
			user_id
			,user_nm
			,user_ip
			,connect_date
			,connect_time
		from tb_login_log
		where 1=1
			
			<if test="searchkeyword != null and searchkeyword != ''">
				<choose>
					<when test='searchtype == "1"'>
						AND user_id LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    <when test='searchtype == "2"'>
						AND user_nm LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    									    									    
				    <when test='searchtype == ""'>
						AND (
							user_id LIKE '%'|| #{searchkeyword} ||'%'												
							or user_nm LIKE '%'|| #{searchkeyword} ||'%'
						)
					</when>
				</choose>
			</if>
		order by connect_date desc, connect_time desc		
		LIMIT 10 OFFSET #{startNo}
	</select>
	
	<select id="selectLogSttusListCount" parameterType="hashMap" resultType="int">

			SELECT COUNT(*) totcnt
			FROM tb_login_log
			WHERE 1=1
				
				<if test="searchkeyword != null and searchkeyword != ''">
				<choose>
					<when test='searchtype == "1"'>
						AND user_id LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    <when test='searchtype == "2"'>
						AND user_nm LIKE '%'|| #{searchkeyword} ||'%'
				    </when>
				    									    									    
				    <when test='searchtype == ""'>
						AND (
							user_id LIKE '%'|| #{searchkeyword} ||'%'												
							or user_nm LIKE '%'|| #{searchkeyword} ||'%'
						)
					</when>
				</choose>
			</if>	
	</select>
	
	<!-- 시스템별통계 년도리스트  -->
	<select id="selectSysYearList" parameterType="hashMap" resultType="hashMap">
		select distinct(substring(req_date,0,5)) as year
		from tb_system_log
		order by year desc
	</select>
	
	<!-- 시스템별통계 년별  -->
	<select id="selectSysYearStat" parameterType="hashMap" resultType="hashMap">
		SELECT aa.req_url, 
		       aa.req_url_count, 
		       bb.menu_nm, 
		       bb.menu_code 
		FROM  (SELECT req_url, 
		              Count(req_url) req_url_count 
		       FROM   tb_system_log 
		       WHERE  1 = 1 
		              AND Substring(req_date, 0, 5) = #{yyGbn} 
		       GROUP  BY req_url) aa 
		      LEFT OUTER JOIN tb_cmmn_menu bb 
		                   ON aa.req_url = bb.menu_url 
		ORDER  BY bb.menu_code  
	</select>
	
	<!-- 시스템별통계 월별  -->
	<select id="selectSysMonStat" parameterType="hashMap" resultType="hashMap">
		SELECT aa.req_url, 
		       aa.req_url_count, 
		       bb.menu_nm, 
		       bb.menu_code 
		FROM  (SELECT req_url, 
		              Count(req_url) req_url_count 
		       FROM   tb_system_log 
		       WHERE  1 = 1 
		              AND Substring(req_date, 0, 7) = #{yymmGbn} 
		       GROUP  BY req_url) aa 
		      LEFT OUTER JOIN tb_cmmn_menu bb 
		                   ON aa.req_url = bb.menu_url 
		ORDER  BY bb.menu_code  
	</select>
	
	<!-- 시스템별통계 일별  -->
	<select id="selectSysDayStat" parameterType="hashMap" resultType="hashMap">
		SELECT aa.req_url, 
		       aa.req_url_count, 
		       bb.menu_nm, 
		       bb.menu_code 
		FROM  (SELECT req_url, 
		              Count(req_url) req_url_count 
		       FROM   tb_system_log 
		       WHERE  1 = 1 
		              AND req_date = #{yymmdd} 
		       GROUP  BY req_url) aa 
		      LEFT OUTER JOIN tb_cmmn_menu bb 
		                   ON aa.req_url = bb.menu_url 
		ORDER  BY bb.menu_code  
	</select>

</mapper>